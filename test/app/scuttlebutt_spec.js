// Generated by CoffeeScript 1.3.3
(function() {
  var Model, Scuttlebutt, http, net, sinon;

  sinon = require('sinon');

  net = require('net');

  Scuttlebutt = require('scuttlebutt');

  Model = require('scuttlebutt/model');

  http = require('http');

  describe('scuttlebutt', function() {
    it('can be required', function() {
      return Scuttlebutt.should.be.OK;
    });
    it('should have a model', function() {
      return Model.should.be.OK;
    });
    it('can update and listen to a model', function() {
      var clock, m, spy;
      clock = sinon.useFakeTimers();
      m = new Model;
      m.set('count', 0);
      spy = sinon.spy();
      m.on('update', spy);
      setInterval(function() {
        return m.set("count", Number(m.get("count") + 1));
      }, 320);
      clock.tick(320);
      spy.args[0][0].should.eql(['count', 1]);
      spy.called.should.be.OK;
      clock.tick(320);
      return spy.args[1][0].should.eql(['count', 2]);
    });
    return it('can update and listen to a stream', function(done) {
      var clock, m, server;
      clock = sinon.useFakeTimers();
      m = new Model;
      server = net.createServer(function(stream) {
        return stream.pipe(m.createStream()).pipe(stream);
      });
      server.listen(8888);
      m.on('update', function() {
        return console.log('arguments', arguments);
      });
      m.set('count', 0);
      setInterval(function() {
        return m.set("count", Number(m.get("count") + 1));
      }, 320);
      clock.tick(320);
      return clock.tick(320);
    });
  });

}).call(this);
